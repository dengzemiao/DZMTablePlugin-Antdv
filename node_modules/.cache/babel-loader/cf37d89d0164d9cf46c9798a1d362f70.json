{"remainingRequest":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/components/TablePlugin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/components/TablePlugin.vue","mtime":1645780277861},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/babel.config.js","mtime":1642989841380},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js","mtime":1644558789549},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js","mtime":1644558789767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TablePlugin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,eAAA;AACA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,CAAA;AAAA;AAFA,KAFA;AAMA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,CAAA;AAAA;AAFA,KAPA;AAWA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,CAAA;AAAA;AAFA,KAZA;AAgBA;AACA,IAAA,uBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,CAAA;AAAA;AAFA,KAjBA;AAqBA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,CAAA;AAAA;AAFA,KAtBA;AA0BA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,CAAA;AAAA;AAFA,KA3BA;AA+BA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,iBAAA;AAAA,eAAA,IAAA;AAAA;AAFA,KAhCA;AAoCA;AACA,IAAA,cAAA,EAAA;AACA,iBAAA;AAAA,eAAA,MAAA;AAAA;AADA,KArCA;AAwCA;AACA,IAAA,UAAA,EAAA;AACA,iBAAA;AAAA,eAAA,QAAA,CAAA,eAAA;AAAA;AADA,KAzCA;AA4CA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,iBAAA;AAAA,eAAA,KAAA;AAAA;AAFA,KA7CA;AAiDA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KAlDA;AAsDA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAvDA,GADA;AA6DA,EAAA,IA7DA,kBA6DA;AACA,WAAA;AACA;AACA,MAAA,UAAA,EAAA,SAFA;AAGA;AACA,MAAA,KAAA,EAAA,SAJA;AAKA;AACA,MAAA,UAAA,EAAA,SANA;AAOA;AACA,MAAA,UAAA,EAAA,SARA;AASA;AACA,MAAA,gBAAA,EAAA,CAVA;AAWA;AACA,MAAA,SAAA,EAAA,SAZA;AAaA;AACA,MAAA,cAAA,EAAA,SAdA;AAeA;AACA,MAAA,eAAA,EAAA,SAhBA;AAiBA;AACA,MAAA,iBAAA,EAAA,SAlBA;AAmBA;AACA,MAAA,aAAA,EAAA,SApBA;AAqBA;AACA,MAAA,aAAA,EAAA,KAtBA;AAuBA;AACA,MAAA,eAAA,EAAA,KAxBA;AAyBA;AACA,MAAA,aAAA,EAAA,KA1BA;AA2BA;AACA,MAAA,gBAAA,EAAA,KA5BA;AA6BA;AACA,MAAA,WAAA,EAAA,KA9BA;AA+BA;AACA,MAAA,SAAA,EAAA;AAhCA,KAAA;AAkCA,GAhGA;AAiGA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,KAAA,CAAA,MAAA;AAAA,SAAA;AAAA;AADA,KAFA;AAKA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,eAAA;AAAA,SAAA;AAAA;AADA,KANA;AASA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,eAAA;AAAA,SAAA;AAAA;AADA,KAVA;AAaA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,oBAAA;AAAA,SAAA;AAAA;AADA,KAdA;AAiBA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,oBAAA;AAAA,SAAA;AAAA;AADA,KAlBA;AAqBA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,YAAA;AAAA,SAAA;AAAA;AADA,KAtBA;AAyBA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,MAAA;AAAA,SAAA;AAAA;AADA,KA1BA;AA6BA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,MAAA;AAAA,SAAA;AAAA;AADA,KA9BA;AAiCA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AAAA,aAAA,SAAA,CAAA,YAAA;AAAA,UAAA,MAAA,CAAA,YAAA;AAAA,SAAA;AAAA;AADA;AAlCA,GAjGA;AAuIA,EAAA,OAvIA,qBAuIA;AACA;AACA,SAAA,UAAA;AACA,GA1IA;AA2IA,EAAA,aA3IA,2BA2IA;AACA;AACA,SAAA,mBAAA;AACA,GA9IA;AA+IA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,UAFA,wBAEA;AACA;AACA,WAAA,UAAA,GAAA,KAAA,KAAA,CAAA,aAAA,CAAA,CAFA,CAGA;;AACA,WAAA,iBAAA,GAAA,KAAA,KAAA,CAAA,mBAAA,CAAA;AACA,WAAA,aAAA,GAAA,KAAA,KAAA,CAAA,YAAA,CAAA,CALA,CAMA;;AACA,UAAA,SAAA,GAAA,KAAA,CAAA,IAAA,CAAA,KAAA,UAAA,CAAA,QAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EARA,CASA;;AACA,UAAA,MAAA,GAAA,EAAA;AACA,MAAA,SAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,GAAA,GAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,sBAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,YAAA,GAAA,CAAA,MAAA,EAAA;AAAA,UAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AAAA;AACA,OAHA,EAXA,CAeA;AACA;AACA;AACA;;AACA,WAAA,KAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAnBA,CAoBA;;AACA,WAAA,UAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CArBA,CAsBA;AACA;;AACA,WAAA,UAAA,GAAA,KAAA,KAAA,CAAA,sBAAA,CAAA,iBAAA,EAAA,CAAA,CAAA,CAxBA,CAyBA;;AACA,WAAA,aAAA,GAAA,KAAA,KAAA,CAAA,sBAAA,CAAA,kBAAA,EAAA,MAAA,CA1BA,CA2BA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA;AACA,YAAA,WAAA,GAAA,KAAA,KAAA,CAAA,sBAAA,CAAA,kBAAA,EAAA,CAAA,CAAA;AACA,aAAA,SAAA,GAAA,WAAA,CAAA,sBAAA,CAAA,gBAAA,EAAA,CAAA,CAAA,CAHA,CAIA;;AACA,QAAA,WAAA,GAAA,KAAA,UAAA,CAAA,sBAAA,CAAA,kBAAA,EAAA,CAAA,CAAA;AACA,aAAA,cAAA,GAAA,WAAA,CAAA,sBAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AACA,OAPA,MAOA;AACA;AACA,aAAA,SAAA,GAAA,KAAA,KAAA,CAAA,sBAAA,CAAA,gBAAA,EAAA,CAAA,CAAA,CAFA,CAGA;;AACA,aAAA,cAAA,GAAA,KAAA,UAAA,CAAA,sBAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AACA,OAxCA,CAyCA;;;AACA,UAAA,WAAA,GAAA,KAAA,KAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA;AACA,WAAA,gBAAA,GAAA,WAAA,CAAA,MAAA,GAAA,CAAA;;AACA,UAAA,KAAA,gBAAA,EAAA;AAAA,aAAA,eAAA,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA;;AACA,UAAA,KAAA,aAAA,EAAA;AAAA,aAAA,gBAAA,GAAA,KAAA,aAAA;AAAA,OA7CA,CA8CA;;;AACA,WAAA,UAAA,CAAA,KAAA,CAAA,QAAA,GAAA,UAAA;AACA,WAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAA,MAAA;AACA,WAAA,UAAA,CAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAjDA,CAkDA;;AACA,WAAA,eAAA,GAnDA,CAoDA;;AACA,WAAA,eAAA,GArDA,CAsDA;;AACA,WAAA,eAAA,GAvDA,CAwDA;;AACA,WAAA,oBAAA,GAzDA,CA0DA;;AACA,WAAA,eAAA,GA3DA,CA4DA;;AACA,WAAA,gBAAA,GA7DA,CA8DA;;AACA,WAAA,YAAA;AACA,KAlEA;AAmEA;AACA,IAAA,MApEA,oBAoEA;AACA;AACA,WAAA,UAAA;AACA,KAvEA;AAwEA;AACA,IAAA,gBAzEA,8BAyEA;AACA;AACA,WAAA,mBAAA,GAFA,CAGA;;AACA,WAAA,SAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,iBAAA,EAJA,CAKA;;AACA,WAAA,cAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,iBAAA,EANA,CAOA;;AACA,WAAA,iBAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,iBAAA,EARA,CASA;;AACA,UAAA,KAAA,cAAA,EAAA;AAAA,aAAA,cAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,YAAA;AAAA,OAVA,CAWA;AACA;;;AACA,MAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,YAAA;AACA,KAvFA;AAwFA;AACA,IAAA,mBAzFA,iCAyFA;AACA;AACA,WAAA,SAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,iBAAA,EAFA,CAGA;;AACA,WAAA,cAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,iBAAA,EAJA,CAKA;;AACA,WAAA,iBAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,iBAAA,EANA,CAOA;;AACA,UAAA,KAAA,cAAA,EAAA;AAAA,aAAA,cAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,YAAA;AAAA,OARA,CASA;AACA;;;AACA,MAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,YAAA;AACA,KArGA;AAsGA;AACA,IAAA,iBAvGA,6BAuGA,CAvGA,EAuGA;AACA,WAAA,iBAAA,CAAA,UAAA,GAAA,CAAA,CAAA,MAAA,CAAA,UAAA;AACA,WAAA,SAAA,CAAA,UAAA,GAAA,CAAA,CAAA,MAAA,CAAA,UAAA;AACA,WAAA,cAAA,CAAA,UAAA,GAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAHA,CAIA;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA,KA7GA;AA8GA;AACA,IAAA,WA/GA,uBA+GA,CA/GA,EA+GA;AACA;AACA,UAAA,KAAA,eAAA,EAAA;AACA;AACA,aAAA,SAAA,CAAA,UAAA,GAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAFA,CAGA;;AACA,aAAA,mBAAA,CAAA,UAAA,GAAA,CAAA,CAAA,MAAA,CAAA,UAAA;AACA;AACA,KAvHA;AAwHA;AACA,IAAA,eAzHA,6BAyHA;AACA;AACA,UAAA,KAAA,iBAAA,EAAA;AACA;AACA,aAAA,iBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,KAAA,eAAA,IAAA,KAAA,aAAA,IAAA,KAAA,WAAA,CAAA,GAAA,OAAA,GAAA,MAAA,CAFA,CAGA;;AACA,YAAA,KAAA,SAAA,EAAA;AAAA,eAAA,iBAAA,CAAA,UAAA,GAAA,KAAA,SAAA,CAAA,UAAA;AAAA;AACA;AACA,KAjIA;AAkIA;AACA,IAAA,oBAnIA,kCAmIA;AACA;AACA,WAAA,UAAA,CAAA,KAAA,CAAA,UAAA,iBAAA,KAAA,cAAA;AACA,WAAA,iBAAA,CAAA,KAAA,CAAA,UAAA,iBAAA,KAAA,cAAA;AACA,KAvIA;AAwIA;AACA,IAAA,eAzIA,6BAyIA;AAAA;;AACA;AACA,WAAA,gBAAA,GAAA,KAAA,UAAA,CAAA,YAAA,CAFA,CAGA;;AACA,WAAA,SAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,gBAAA,IAAA,IAAA,CAAA,YAAA;AACA,OAFA,EAJA,CAOA;;AACA,WAAA,gBAAA,IAAA,KAAA,uBAAA,CARA,CASA;;AACA,WAAA,UAAA,CAAA,KAAA,CAAA,MAAA,aAAA,KAAA,gBAAA,QAVA,CAWA;;AACA,WAAA,aAAA,CAAA,KAAA,CAAA,KAAA,aAAA,KAAA,SAAA,CAAA,WAAA;AACA,KAtJA;AAuJA;AACA,IAAA,eAxJA,6BAwJA;AAAA;;AACA;AACA,UAAA,KAAA,aAAA,GAAA,CAAA,EAAA;AACA;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA,sBAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,QAAA,CAAA,CAFA,CAGA;;AACA,YAAA,SAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,cAAA,IAAA,GAAA,KAAA,GAAA,OAAA,CAAA,aAAA;;AACA,cAAA,IAAA,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,CAAA,IAAA;AAAA;;AACA,iBAAA,IAAA;AACA,SAJA,EALA,CAUA;;AACA,aAAA,SAAA,GAAA,SAAA;AACA,OAZA,MAYA;AACA;AACA,aAAA,SAAA,GAAA,EAAA;AACA;AACA,KA1KA;AA2KA;AACA,IAAA,eA5KA,6BA4KA;AACA;AACA,UAAA,KAAA,SAAA,GAAA,CAAA,EAAA;AACA;AACA,aAAA,WAAA,GAAA,IAAA;AACA,OAHA,MAGA;AACA;AACA,aAAA,WAAA,GAAA,KAAA,SAAA,CAAA,sBAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,QAAA,CAAA,MAAA;AACA,OARA,CASA;;;AACA,WAAA,UAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,KAAA,WAAA,CAAA;AACA,WAAA,iBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,KAAA,WAAA,CAAA,GAAA,OAAA,GAAA,MAAA;AACA,KAxLA;AAyLA;AACA,IAAA,YA1LA,0BA0LA;AACA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AAAA;AAAA,OAFA,CAGA;;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAJA,CAKA;;AACA,WAAA,eAAA,GANA,CAOA;;AACA,UAAA,cAAA,GAAA,KAAA,UAAA,CAAA,qBAAA,EAAA,CARA,CASA;;AACA,UAAA,IAAA,GAAA,KAAA,UAAA,CAAA,SAAA,CAVA,CAWA;;AACA,UAAA,KAAA,GAAA,IAAA,GAAA,KAAA,UAAA,CAAA,YAAA,CAZA,CAaA;;AACA,UAAA,SAAA,GAAA,cAAA,CAAA,CAAA,GAAA,IAAA,CAdA,CAeA;;AACA,UAAA,YAAA,GAAA,KAAA,gBAAA,GAAA,KAAA,YAAA,GAAA,CAAA,CAhBA,CAiBA;;AACA,UAAA,KAAA,YAAA,KAAA,CAAA,IAAA,KAAA,eAAA,EAAA;AAAA,QAAA,YAAA,GAAA,KAAA,eAAA,CAAA,YAAA;AAAA,OAlBA,CAmBA;;;AACA,UAAA,gBAAA,GAAA,KAAA,UAAA,CAAA,YAAA,CApBA,CAqBA;;AACA,UAAA,IAAA,GAAA,SAAA,GAAA,gBAAA,GAAA,YAAA,CAtBA,CAuBA;;AACA,WAAA,UAAA,CAAA,KAAA,CAAA,GAAA,aAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,CAAA,CAAA,GAAA,KAAA,cAAA,EAAA,IAAA,GAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,QAxBA,CAyBA;;AACA,UAAA,cAAA,GAAA,KAAA,iBAAA,CAAA,YAAA,CA1BA,CA2BA;;AACA,UAAA,YAAA,GAAA,YAAA,IAAA,IAAA,GAAA,KAAA,CAAA;AACA,UAAA,YAAA,GAAA,YAAA,IAAA,IAAA,GAAA,SAAA,GAAA,KAAA,gBAAA,GAAA,cAAA,CAAA;AACA,WAAA,iBAAA,CAAA,KAAA,CAAA,MAAA,aAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,YAAA,EAAA,YAAA,CAAA,EAAA,YAAA,CAAA,QA9BA,CA+BA;;AACA,UAAA,KAAA,eAAA,IAAA,KAAA,aAAA,IAAA,KAAA,WAAA,EAAA;AACA,aAAA,iBAAA,CAAA,UAAA,GAAA,KAAA,SAAA,CAAA,UAAA;AACA,aAAA,iBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,YAAA,GAAA,YAAA,CAAA,GAAA,OAAA,GAAA,MAAA;AACA,OAnCA,CAoCA;AACA;;AACA;AAhOA;AA/IA,CAAA","sourcesContent":["<template>\n  <!-- 插件视图 -->\n  <div class=\"plugin-view\" ref=\"plugin-view\">\n    <!-- 列表视图 -->\n    <slot></slot>\n    <!-- 浮层视图 -->\n    <slot></slot>\n    <!-- 滚动条视图 -->\n    <div\n      class=\"plugin-scroll-bar\"\n      ref=\"plugin-scroll-bar\"\n      :style=\"`height: ${scrollBarHeight}px;`\"\n      @scroll=\"scrollEvent\"\n    >\n      <!-- 滚动条内部撑开元素 -->\n      <div class=\"scroll-bar\" ref=\"scroll-bar\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    // 数据源数量（用于代替 element-resize-detector 监听的解决方案）\n    dataCount: {\n      type: Number,\n      default: () => 0\n    },\n    // 从第一行开始，指定前面几行跟头部进行悬浮（0：不开启，>=1：代表前面几行都会跟头部进行悬浮）\n    fixedRowCount: {\n      type: Number,\n      default: () => 0\n    },\n    // 悬浮层头部距离顶部距离（用于顶部有悬浮菜单栏时，悬浮头不被挡住，保持在悬浮菜单栏之下）\n    fixedHeaderTop: {\n      type: Number,\n      default: () => 0\n    },\n    // 悬浮头底部需要额外增高多少px（比如分割线未显示全，可能是高度不够，稍微添加几px才能看见）\n    fixedHeaderOffsetBottom: {\n      type: Number,\n      default: () => 0\n    },\n    // 悬浮层移动动画时间\n    durationHeader: {\n      type: Number,\n      default: () => 0\n    },\n    // 悬浮层移动动画时间\n    durationFooter: {\n      type: Number,\n      default: () => 0\n    },\n    // 显示底部滚动条\n    isShowScrollBar: {\n      type: Boolean,\n      default: () => true\n    },\n    // 滚动监听对象（如果是弹层，替换成滚动监听对象）\n    scrollListener: {\n      default: () => window\n    },\n    // 滚动对比父元素（如果是窗口高度，则不需要替换该对象，一般情况不需要动这个对象）\n    scrollView: {\n      default: () => document.documentElement\n    },\n    // 强制设置为有底部分页器栏（false：自动识别，true：当无法识别时，则根据状态强制设定存在）\n    isExistFooter: {\n      type: Boolean,\n      default: () => false\n    },\n    // 底部分页器栏高度（0 为自动获取，如果获取的尺寸不对，可以手动设置，官方自带底部分页器高度为 64，如果有调整间距则自行设置）\n    footerHeight: {\n      type: Number,\n      default: () => 64\n    },\n    // 自定义滚动条父容器高度（一般需要比滚动条高 1-2px 即可，比如后期调整滚动条高度为 4，可将该值调整为 5-6，不修改其实也没影响，如果出现问题在修改也是可以的，这里设置为 18 是为了兼容 window 默认的滚动条高度）\n    scrollBarHeight: {\n      type: Number,\n      default: () => 18\n    }\n  },\n  data () {\n    return {\n      // 插件视图\n      pluginView: undefined,\n      // 当前 Table\n      table: undefined,\n      // 当前 Table 的头部悬浮层\n      tableFixed: undefined,\n      // 当前 Table 头部 Thead 元素\n      tableThead: undefined,\n      // 当前 Table 头部 Thead 元素高度\n      tableTheadHeight: 0,\n      // 当前 Table 的 Body 元素\n      tableBody: undefined,\n      // 当前 Table 的头部悬浮层 Body 元素\n      tableBodyFixed: undefined,\n      // 当前 Table 的底部分页器栏\n      tablePagination: undefined,\n      // 当前 Table 自定义滚动条主视图\n      tableSrollBarView: undefined,\n      // 当前 Table 自定义滚动条子视图\n      tableSrollBar: undefined,\n      // 当前 Table 是否支持滚动\n      isTableScroll: false,\n      // 鼠标进入了自定义滚动条范围\n      isSrollBarHover: false,\n      // 当前 Table 左右是否有悬浮列\n      isFixedColumn: false,\n      // 是否有底部分页器栏\n      isExistFooterBar: false,\n      // 是否存在数据展示，还是空列表\n      isExistData: false,\n      // 悬浮行列表\n      fixedRows: []\n    }\n  },\n  watch: {\n    // 数据源数量（主要是这个需要 $nextTick，其他的 $nextTick 可根据情况需求移除直接调用）\n    dataCount: {\n      handler () { this.$nextTick(() => {  this.reload() }) }\n    },\n    // 从第一行开始，指定前面几行跟头部进行悬浮\n    fixedRowCount: {\n      handler () { this.$nextTick(() => {  this.reloadFixedRows() }) }\n    },\n    // 自定义滚动条可视状态\n    isShowScrollBar: {\n      handler () { this.$nextTick(() => {  this.reloadScrollBar() }) }\n    },\n    // 设置动画时间\n    durationHeader: {\n      handler () { this.$nextTick(() => {  this.reloadFixedAnimation() }) }\n    },\n    // 设置动画时间\n    durationFooter: {\n      handler () { this.$nextTick(() => {  this.reloadFixedAnimation() }) }\n    },\n    // 底部分页器栏高度\n    footerHeight: {\n      handler () { this.$nextTick(() => {  this.scrollChange() }) }\n    },\n    // 滚动监听对象\n    scrollListener: {\n      handler () { this.$nextTick(() => {  this.reload() }) }\n    },\n    // 滚动对比父元素\n    scrollView: {\n      handler () { this.$nextTick(() => {  this.reload() }) }\n    },\n    // 自定义滚动条父容器高度\n    scrollBarHeight: {\n      handler () { this.$nextTick(() => {  this.scrollChange() }) }\n    }\n  },\n  mounted () {\n    // 初始化插件\n    this.initPlugin()\n  },\n  beforeDestroy () {\n    // 移除所有监听\n    this.removeEventListener()\n  },\n  methods: {\n    // 初始化插件\n    initPlugin () {\n      // 当前插件视图\n      this.pluginView = this.$refs['plugin-view']\n      // 当前自定义滚动条\n      this.tableSrollBarView = this.$refs['plugin-scroll-bar']\n      this.tableSrollBar = this.$refs['scroll-bar']\n      // 获取当前插件内的所有子元素\n      const childrens = Array.from(this.pluginView.children)\n      console.log(childrens);\n      // 获得包含 Table 的子元素\n      const tables = []\n      childrens.forEach((children) => {\n        const els = Array.from(children.getElementsByClassName('ant-table-wrapper'))\n        if (els.length) { tables.push(children) }\n      })\n      // console.log(childrens);\n      // 当前插件内所有 Table 元素\n      // const tables = this.pluginView.getElementsByClassName('ant-table-wrapper')\n      // 当前 Table\n      this.table = tables[0]\n      // 当前 Table 悬浮层\n      this.tableFixed = tables[1]\n      // console.log(this.tableFixed);\n      // 当前 Table 头部 Thead 元素高度，用于悬浮\n      this.tableThead = this.table.getElementsByClassName('ant-table-thead')[0]\n      // 当前 Table 是否可以左右滚动\n      this.isTableScroll = this.table.getElementsByClassName('ant-table-scroll').length\n      // 当前 Table 支持左右滚动\n      if (this.isTableScroll) {\n        // 当前 Table 的 Body 元素，用于监听 Table 滚动\n        var tableScroll = this.table.getElementsByClassName('ant-table-scroll')[0]\n        this.tableBody = tableScroll.getElementsByClassName('ant-table-body')[0]\n        // 当前 Table 的头部悬浮层 Body 元素，用于监听悬浮层 Table 滚动\n        tableScroll = this.tableFixed.getElementsByClassName('ant-table-scroll')[0]\n        this.tableBodyFixed = tableScroll.getElementsByClassName('ant-table-body')[0]\n      } else {\n        // 当前 Table 的 Body 元素\n        this.tableBody = this.table.getElementsByClassName('ant-table-body')[0]\n        // 当前 Table 的头部悬浮层 Body 元素\n        this.tableBodyFixed = this.tableFixed.getElementsByClassName('ant-table-body')[0]\n      }\n      // 是否启用了分页器\n      const paginations = this.table.getElementsByClassName('ant-table-pagination')\n      this.isExistFooterBar = paginations.length > 0\n      if (this.isExistFooterBar) { this.tablePagination = paginations[0] }\n      if (this.isExistFooter) { this.isExistFooterBar = this.isExistFooter }\n      // Table 头部进行悬浮\n      this.tableFixed.style.position = 'absolute'\n      this.tableFixed.style.width = '100%'\n      this.tableFixed.style.overflow = 'hidden'\n      // 刷新检查 Table 是否存在数据\n      this.reloadDataCheck()\n      // 刷新悬浮行数\n      this.reloadFixedRows()\n      // 刷新悬浮层内部大小\n      this.reloadFixedSize()\n      // 刷新动画\n      this.reloadFixedAnimation()\n      // 刷新滚动条的可视状态\n      this.reloadScrollBar()\n      // 添加监听事件\n      this.addEventListener()\n      // 初始化手动滚动一次\n      this.scrollChange()\n    },\n    // 刷新组件布局\n    reload () {\n      // 重新初始化组件布局获取\n      this.initPlugin()\n    },\n    // 添加监听事件\n    addEventListener () {\n      // 先进行移除监听\n      this.removeEventListener()\n      // 添加 Table 滚动监听 以便同步滚动进度\n      this.tableBody.addEventListener('scroll', this.unifiedScrollLeft)\n      // 添加 Table 的头部悬浮层滚动监听，以便同步滚动进度\n      this.tableBodyFixed.addEventListener('scroll', this.unifiedScrollLeft)\n      // 添加自定义滚动条滚动监听，以便同步滚动进度\n      this.tableSrollBarView.addEventListener('scroll', this.unifiedScrollLeft)\n      // 监听滚动\n      if (this.scrollListener) { this.scrollListener.addEventListener('scroll', this.scrollChange) }\n      // 监听窗口缩放\n      // window.onresize = () => { this.scrollChange() }\n      window.addEventListener('resize', this.scrollChange)\n    },\n    // 移除监听事件\n    removeEventListener () {\n      // 移除 Table 滚动监听\n      this.tableBody.removeEventListener('scroll', this.unifiedScrollLeft)\n      // 移除 Table 的头部悬浮层滚动监听\n      this.tableBodyFixed.removeEventListener('scroll', this.unifiedScrollLeft)\n      // 移除自定义滚动条滚动监听\n      this.tableSrollBarView.removeEventListener('scroll', this.unifiedScrollLeft)\n      // 移除监听滚动\n      if (this.scrollListener) { this.scrollListener.removeEventListener('scroll', this.scrollChange) }\n      // 移除监听窗口缩放\n      // window.onresize = null\n      window.removeEventListener('resize', this.scrollChange)\n    },\n    // 统一滚动坐标\n    unifiedScrollLeft (e) {\n      this.tableSrollBarView.scrollLeft = e.target.scrollLeft\n      this.tableBody.scrollLeft = e.target.scrollLeft\n      this.tableBodyFixed.scrollLeft = e.target.scrollLeft\n      // 滚动回调\n      this.$emit('scroll', false)\n    },\n    // 自定义滚动条滚动中\n    scrollEvent (e) {\n      // 是否进入了自定义滚动条范围\n      if (this.isSrollBarHover) {\n        // 同步至当前 Table 的 Body 元素\n        this.tableBody.scrollLeft = e.target.scrollLeft\n        // 同步至当前 Table 的头部悬浮层元素\n        this.tableBodySuspension.scrollLeft = e.target.scrollLeft\n      }\n    },\n    // 刷新滚动条的可视状态\n    reloadScrollBar () {\n      // 是否已经加载到页面\n      if (this.tableSrollBarView) {\n        // 判断显示与隐藏（支持显示 && 支持滚动 && Table有展示数据）\n        this.tableSrollBarView.style.display = Number(this.isShowScrollBar && this.isTableScroll && this.isExistData) ? 'block' : 'none'\n        // 同步滚动进度\n        if (this.tableBody) { this.tableSrollBarView.scrollLeft = this.tableBody.scrollLeft }\n      }\n    },\n    // 刷新悬浮层动画\n    reloadFixedAnimation () {\n      // 设置动画\n      this.tableFixed.style.transition = `all ${this.durationHeader}s`\n      this.tableSrollBarView.style.transition = `all ${this.durationFooter}s`\n    },\n    // 刷新悬浮层内容大小\n    reloadFixedSize () {\n      // 获得头部高度\n      this.tableTheadHeight = this.tableThead.clientHeight\n      // 是否存在悬浮行\n      this.fixedRows.forEach(item => {\n        this.tableTheadHeight += item.clientHeight\n      })\n      // 增加偏移高度\n      this.tableTheadHeight += this.fixedHeaderOffsetBottom\n      // 头部悬浮层高度统一\n      this.tableFixed.style.height = `${this.tableTheadHeight}px`\n      // 将当前自定义滚动条宽度与当前 Table 的 Body 元素保持一致\n      this.tableSrollBar.style.width = `${this.tableBody.scrollWidth}px`\n    },\n    // 刷新悬浮层高度\n    reloadFixedRows () {\n      // 判断是否需要固定行\n      if (this.fixedRowCount > 0) {\n        // 获取行列表\n        const rows = Array.from(this.tableBody.getElementsByClassName('ant-table-tbody')[0].children)\n        // 取出悬浮列\n        const fixedRows = []\n        rows.every((item, index) => {\n          const isOK = index < this.fixedRowCount\n          if (isOK) { fixedRows.push(item) }\n          return isOK\n        })\n        // 记录\n        this.fixedRows = fixedRows\n      } else {\n        // 清空\n        this.fixedRows = []\n      }\n    },\n    // 刷新检查 Table 中是否存在数据\n    reloadDataCheck () {\n      // 数据量数量\n      if (this.dataCount > 0) {\n        // 有数据\n        this.isExistData = true\n      } else {\n        // 自行获取判断\n        this.isExistData = this.tableBody.getElementsByClassName('ant-table-tbody')[0].children.length\n      }\n      // 隐藏或显示\n      this.tableFixed.style.opacity = Number(this.isExistData)\n      this.tableSrollBarView.style.display = Number(this.isExistData) ? 'block' : 'none'\n    },\n    // 滚动变化处理\n    scrollChange () {\n      // 没有有滚动对比元素\n      if (!this.scrollView) { return }\n      // 滚动回调\n      this.$emit('scroll', true)\n      // 刷新悬浮层内部大小\n      this.reloadFixedSize()\n      // 获得当前 Table 插件在窗口上的具体位置\n      const pluginViewRect = this.pluginView.getBoundingClientRect()\n      // 滚动控件进度条上面以滚动过的高度\n      const topY = this.scrollView.scrollTop\n      // 滚动控件进度条上面以滚动过的高度 + 滚动控件高度 = 当前滚动控件窗口的最底部Y值位置\n      const lastY = topY + this.scrollView.clientHeight\n      // 当前距离窗口顶部的高度 + 滚动控件进度条上面以滚动过的高度 = 当前控件距离顶部的滚动距离\n      const offsetTop = pluginViewRect.y + topY\n      // 分页器栏高度\n      var footerHeight = this.isExistFooterBar ? this.footerHeight : 0\n      // 为 0 则表示自动获取 && 存在分页器栏\n      if (this.footerHeight === 0 && this.tablePagination) { footerHeight = this.tablePagination.clientHeight }\n      // 插件视图高度\n      const pluginViewHeight = this.pluginView.clientHeight\n      // 最大Y值\n      const maxY = offsetTop + pluginViewHeight - footerHeight\n      // 更新悬浮层头部位置\n      this.tableFixed.style.top = `${Math.max(Math.min(-pluginViewRect.y + this.fixedHeaderTop, (maxY - offsetTop - this.tableTheadHeight)), 0)}px`\n      // 自定义滚动条高度\n      const srollBarHeight = this.tableSrollBarView.offsetHeight\n      // 更新悬浮层尾部位置\n      const srollBarMaxY = footerHeight + (maxY - lastY)\n      const srollBarMinY = footerHeight + (maxY - offsetTop - this.tableTheadHeight - srollBarHeight)\n      this.tableSrollBarView.style.bottom = `${Math.max(Math.min(srollBarMaxY, srollBarMinY), footerHeight)}px`\n      // 悬浮层尾部位置显示状态（支持显示 && 支持滚动 && Table有展示数据）\n      if (this.isShowScrollBar && this.isTableScroll && this.isExistData) {\n        this.tableSrollBarView.scrollLeft = this.tableBody.scrollLeft\n        this.tableSrollBarView.style.display = Number(srollBarMaxY > footerHeight) ? 'block' : 'none'\n      }\n      // 当前 Table 的 Body 是否支持横向滚动\n      // const isTableBodyScroll = this.tableBody.clientWidth < this.tableBody.scrollWidth\n    }\n  }\n}\n</script>\n\n<style scoped>\n.plugin-view {\n  position: relative;\n}\n.plugin-scroll-bar {\n  position: absolute;\n  overflow-x: auto;\n  width: 100%;\n  z-index: 1;\n}\n.scroll-bar {\n  width: 100%;\n  height: 100%;\n}\n</style>"],"sourceRoot":"src/components"}]}