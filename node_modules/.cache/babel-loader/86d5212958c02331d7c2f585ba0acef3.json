{"remainingRequest":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case1.vue","mtime":1644892623341},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/babel.config.js","mtime":1642989841380},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js","mtime":1644558789549},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js","mtime":1644558789767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmV2ZXJzZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIOWvvOWFpQppbXBvcnQgVGFibGVQbHVnaW4gZnJvbSAnLi4vY29tcG9uZW50cy9UYWJsZVBsdWdpbic7IC8vIOWIl+aVsOaNrgoKdmFyIGNvbHVtbnMgPSBbewogIHRpdGxlOiAnaWQnLAogIGRhdGFJbmRleDogJ2lkJywKICBrZXk6ICdpZCcsCiAgZml4ZWQ6ICdsZWZ0Jwp9LCB7CiAgdGl0bGU6ICflp5PlkI0nLAogIGRhdGFJbmRleDogJ25hbWUnLAogIGtleTogJ25hbWUnCn0sIHsKICB0aXRsZTogJ+W5tOm+hCcsCiAgZGF0YUluZGV4OiAnYWdlJywKICBrZXk6ICdhZ2UnLAogIC8vIOaUr+aMgei/meenjeW8gOWQr+aOkuW6j+S5i+WQju+8jOWklumDqOWFrOWFsei/m+ihjOS/ruaUueaVsOaNrua6kOeahOaWueW8j++8jOWFtuWunuS5n+WwseaYr+aOkuW6j+i1sOacjeWKoeWZqOacgOWQiOmAgu+8jOaIluiAheacrOWcsOaJi+WKqOaOkuW6j+S4gOmBje+8jOiwg+aVtOaVsOaNrua6kOOAggogIHNvcnRlcjogdHJ1ZSAvLyDkuI3mlK/mjIHov5nnp43lhoXpg6jnmoTmjpLluo/mlrnlvI/vvIzlm6DkuLrml6Dms5Xkvb/mlbDmja7mupDlj5HnlJ/lj5jljJbvvIzmiYDmnInpnIDopoHmlLnlj5jmlbDmja7mupDnmoTmk43kvZzpg73pnIDopoHlhazlhbHlpITnkIbvvIwKICAvLyDov5nmoLfmlbDmja7mupDlj5jljJbkuobvvIzliJfooajlsZXnpLrlsYLmiY3kvJrliLfmlrDvvIzlkKbliJnnlJ/mlYjnmoTliJnkvJrmmK/mgqzmta7nmoTlpLTpg6jlsYLvvIzkuIvpnaLnmoTliJfooajkvJrlm6DkuLrmlbDmja7mupDmsqHmnInlj5jljJbogIzkuI3liLfmlrDnlJ/mlYgKICAvLyBzb3J0ZXI6IChhLCBiKSA9PiBhLmFnZSA+IGIuYWdlCgp9XTsgLy8g5qih5ouf5pWw5o2uCgp2YXIgZGF0YVNvdXJjZSA9IFtdOwoKZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IDEwMDsgaW5kZXgrKykgewogIGRhdGFTb3VyY2UucHVzaCh7CiAgICBpZDogaW5kZXgsCiAgICBuYW1lOiAiVXNlciIuY29uY2F0KGluZGV4KSwKICAgIGFnZTogaW5kZXggKyAxMAogIH0pOwp9CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVGFibGVQbHVnaW46IFRhYmxlUGx1Z2luCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29sdW1uczogY29sdW1ucywKICAgICAgZGF0YVNvdXJjZTogZGF0YVNvdXJjZSwKICAgICAgcGFnaW5hdGlvbjogewogICAgICAgIGN1cnJlbnQ6IDEsCiAgICAgICAgcGFnZVNpemU6IDUwLAogICAgICAgIHRvdGFsOiBkYXRhU291cmNlLmxlbmd0aAogICAgICB9LAogICAgICAvLyDli77pgInmoYbov5nnp43mlrnlvI/lsLHmmK/kv67mlLnmlbDmja7mupDvvIzmiYDku6XkuI3pnIDopoHlgZrku7vkvZXlpITnkIbvvIzmjpLluo/mk43kvZzot5/ov5nkuKrljp/nkIbkuIDoh7QKICAgICAgc2VsZWN0ZWRSb3dLZXlzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIFRhYmxl5Zue6LCDCiAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UocGFnaW5hdGlvbiwgZmlsdGVycywgc29ydGVyKSB7CiAgICAgIC8vIOeugOmZi+eahOacrOWcsOaOkuW6j+WkhOeQhgogICAgICBpZiAoc29ydGVyLmNvbHVtbktleSA9PT0gJ2FnZScpIHsKICAgICAgICBpZiAoc29ydGVyLm9yZGVyICE9PSAnYXNjZW5kJykgewogICAgICAgICAgdGhpcy5kYXRhU291cmNlID0gdGhpcy5kYXRhU291cmNlLnJldmVyc2UoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAvLyDli77pgInmtYvor5UKICAgIG9uU2VsZWN0Q2hhbmdlOiBmdW5jdGlvbiBvblNlbGVjdENoYW5nZShzZWxlY3RlZFJvd0tleXMpIHsKICAgICAgdGhpcy5zZWxlY3RlZFJvd0tleXMgPSBzZWxlY3RlZFJvd0tleXM7CiAgICB9LAogICAgLy8g6Kem5Y+R5LqG5rua5YqoCiAgICBzY3JvbGxDaGFuZ2U6IGZ1bmN0aW9uIHNjcm9sbENoYW5nZShpc1ZlcikgewogICAgICBjb25zb2xlLmxvZygiXHU2QjYzXHU1NzI4ICIuY29uY2F0KGlzVmVyID8gJ+erluWQkScgOiAn5qiq5ZCRJywgIiBcdTZFREFcdTUyQTgiKSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Case1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA,OAAA,WAAA,MAAA,2BAAA,C,CACA;;AACA,IAAA,OAAA,GAAA,CACA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA,IAFA;AAGA,EAAA,GAAA,EAAA,IAHA;AAIA,EAAA,KAAA,EAAA;AAJA,CADA,EAOA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA,MAFA;AAGA,EAAA,GAAA,EAAA;AAHA,CAPA,EAYA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA,KAFA;AAGA,EAAA,GAAA,EAAA,KAHA;AAIA;AACA,EAAA,MAAA,EAAA,IALA,CAMA;AACA;AACA;;AARA,CAZA,CAAA,C,CAuBA;;AACA,IAAA,UAAA,GAAA,EAAA;;AACA,KAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA;AACA,EAAA,UAAA,CAAA,IAAA,CAAA;AAAA,IAAA,EAAA,EAAA,KAAA;AAAA,IAAA,IAAA,gBAAA,KAAA,CAAA;AAAA,IAAA,GAAA,EAAA,KAAA,GAAA;AAAA,GAAA;AACA;;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,OADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,UAAA,EAAA;AACA,QAAA,OAAA,EAAA,CADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,UAAA,CAAA;AAHA,OAHA;AAQA;AACA,MAAA,eAAA,EAAA;AATA,KAAA;AAWA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,UAFA,EAEA,OAFA,EAEA,MAFA,EAEA;AACA;AACA,UAAA,MAAA,CAAA,SAAA,KAAA,KAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,KAAA,QAAA,EAAA;AACA,eAAA,UAAA,GAAA,KAAA,UAAA,CAAA,OAAA,EAAA;AACA;AACA;AACA,KATA;AAUA;AACA,IAAA,cAXA,0BAWA,eAXA,EAWA;AACA,WAAA,eAAA,GAAA,eAAA;AACA,KAbA;AAcA;AACA,IAAA,YAfA,wBAeA,KAfA,EAeA;AACA,MAAA,OAAA,CAAA,GAAA,wBAAA,KAAA,GAAA,IAAA,GAAA,IAAA;AACA;AAjBA;AAjBA,CAAA","sourcesContent":["<template>\n  <!-- 内容视图 -->\n  <div class=\"content-view\">\n    <!-- TablePlugin -->\n    <TablePlugin @scroll=\"scrollChange\">\n      <a-table\n        :columns=\"columns\"\n        :data-source=\"dataSource\"\n        :row-key=\"record => record.id\"\n        :pagination=\"pagination\"\n        :row-selection=\"{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }\"\n        :scroll=\"{ x: 1500 }\"\n        @change=\"onChange\"\n      ></a-table>\n    </TablePlugin>\n  </div>\n</template>\n\n<script>\n// 导入\nimport TablePlugin from '../components/TablePlugin'\n// 列数据\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n    fixed: 'left'\n  },\n  {\n    title: '姓名',\n    dataIndex: 'name',\n    key: 'name'\n  },\n  {\n    title: '年龄',\n    dataIndex: 'age',\n    key: 'age',\n    // 支持这种开启排序之后，外部公共进行修改数据源的方式，其实也就是排序走服务器最合适，或者本地手动排序一遍，调整数据源。\n    sorter: true\n    // 不支持这种内部的排序方式，因为无法使数据源发生变化，所有需要改变数据源的操作都需要公共处理，\n    // 这样数据源变化了，列表展示层才会刷新，否则生效的则会是悬浮的头部层，下面的列表会因为数据源没有变化而不刷新生效\n    // sorter: (a, b) => a.age > b.age\n  }\n]\n// 模拟数据\nconst dataSource = []\nfor (let index = 0; index < 100; index++) {\n  dataSource.push({ id: index, name: `User${index}`, age: index + 10 }) \n}\nexport default {\n  components: {\n    TablePlugin\n  },\n  data () {\n    return {\n      columns,\n      dataSource,\n      pagination: {\n        current: 1,\n        pageSize: 50,\n        total: dataSource.length\n      },\n      // 勾选框这种方式就是修改数据源，所以不需要做任何处理，排序操作跟这个原理一致\n      selectedRowKeys: []\n    }\n  },\n  methods: {\n    // Table回调\n    onChange (pagination, filters, sorter) {\n      // 简陋的本地排序处理\n      if (sorter.columnKey === 'age') {\n        if (sorter.order !== 'ascend') {\n          this.dataSource = this.dataSource.reverse()\n        }\n      }\n    },\n    // 勾选测试\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 触发了滚动\n    scrollChange (isVer) {\n      console.log(`正在 ${isVer ? '竖向' : '横向'} 滚动`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.content-view {\n  margin: 50px;\n}\n</style>"],"sourceRoot":"src/views"}]}