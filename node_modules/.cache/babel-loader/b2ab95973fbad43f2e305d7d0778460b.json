{"remainingRequest":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case7.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case7.vue","mtime":1645780568926},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/babel.config.js","mtime":1642989841380},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js","mtime":1644558789549},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js","mtime":1644558789767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmV2ZXJzZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIOWvvOWFpQppbXBvcnQgVGFibGVQbHVnaW4gZnJvbSAnLi4vY29tcG9uZW50cy9UYWJsZVBsdWdpbic7IC8vIOWIl+aVsOaNrgoKdmFyIGNvbHVtbnMgPSBbewogIHRpdGxlOiAnaWQnLAogIGRhdGFJbmRleDogJ2lkJywKICBrZXk6ICdpZCcKfSwgewogIHRpdGxlOiAn5aeT5ZCNJywKICBkYXRhSW5kZXg6ICduYW1lJywKICBrZXk6ICduYW1lJwp9LCB7CiAgdGl0bGU6ICflubTpvoQnLAogIGRhdGFJbmRleDogJ2FnZScsCiAga2V5OiAnYWdlJywKICAvLyDmlK/mjIHov5nnp43lvIDlkK/mjpLluo/kuYvlkI7vvIzlpJbpg6jlhazlhbHov5vooYzkv67mlLnmlbDmja7mupDnmoTmlrnlvI/vvIzlhbblrp7kuZ/lsLHmmK/mjpLluo/otbDmnI3liqHlmajmnIDlkIjpgILvvIzmiJbogIXmnKzlnLDmiYvliqjmjpLluo/kuIDpgY3vvIzosIPmlbTmlbDmja7mupDjgIIKICBzb3J0ZXI6IHRydWUgLy8g5LiN5pSv5oyB6L+Z56eN5YaF6YOo55qE5o6S5bqP5pa55byP77yM5Zug5Li65peg5rOV5L2/5pWw5o2u5rqQ5Y+R55Sf5Y+Y5YyW77yM5omA5pyJ6ZyA6KaB5pS55Y+Y5pWw5o2u5rqQ55qE5pON5L2c6YO96ZyA6KaB5YWs5YWx5aSE55CG77yMCiAgLy8g6L+Z5qC35pWw5o2u5rqQ5Y+Y5YyW5LqG77yM5YiX6KGo5bGV56S65bGC5omN5Lya5Yi35paw77yM5ZCm5YiZ55Sf5pWI55qE5YiZ5Lya5piv5oKs5rWu55qE5aS06YOo5bGC77yM5LiL6Z2i55qE5YiX6KGo5Lya5Zug5Li65pWw5o2u5rqQ5rKh5pyJ5Y+Y5YyW6ICM5LiN5Yi35paw55Sf5pWICiAgLy8gc29ydGVyOiAoYSwgYikgPT4gYS5hZ2UgPiBiLmFnZQoKfV07IC8vIOaooeaLn+aVsOaNrgoKdmFyIGRhdGFTb3VyY2UgPSBbXTsKCmZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCAxMDA7IGluZGV4KyspIHsKICBkYXRhU291cmNlLnB1c2goewogICAgaWQ6IGluZGV4LAogICAgbmFtZTogIlVzZXIiLmNvbmNhdChpbmRleCksCiAgICBhZ2U6IGluZGV4ICsgMTAKICB9KTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFRhYmxlUGx1Z2luOiBUYWJsZVBsdWdpbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbnM6IGNvbHVtbnMsCiAgICAgIGRhdGFTb3VyY2U6IGRhdGFTb3VyY2UsCiAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICBjdXJyZW50OiAxLAogICAgICAgIHBhZ2VTaXplOiA1MCwKICAgICAgICB0b3RhbDogZGF0YVNvdXJjZS5sZW5ndGgKICAgICAgfSwKICAgICAgLy8g5Yu+6YCJ5qGG6L+Z56eN5pa55byP5bCx5piv5L+u5pS55pWw5o2u5rqQ77yM5omA5Lul5LiN6ZyA6KaB5YGa5Lu75L2V5aSE55CG77yM5o6S5bqP5pON5L2c6Lef6L+Z5Liq5Y6f55CG5LiA6Ie0CiAgICAgIHNlbGVjdGVkUm93S2V5czogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBUYWJsZeWbnuiwgwogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKHBhZ2luYXRpb24sIGZpbHRlcnMsIHNvcnRlcikgewogICAgICAvLyDnroDpmYvnmoTmnKzlnLDmjpLluo/lpITnkIYKICAgICAgaWYgKHNvcnRlci5jb2x1bW5LZXkgPT09ICdhZ2UnKSB7CiAgICAgICAgaWYgKHNvcnRlci5vcmRlciAhPT0gJ2FzY2VuZCcpIHsKICAgICAgICAgIHRoaXMuZGF0YVNvdXJjZSA9IHRoaXMuZGF0YVNvdXJjZS5yZXZlcnNlKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgLy8g5Yu+6YCJ5rWL6K+VCiAgICBvblNlbGVjdENoYW5nZTogZnVuY3Rpb24gb25TZWxlY3RDaGFuZ2Uoc2VsZWN0ZWRSb3dLZXlzKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRSb3dLZXlzID0gc2VsZWN0ZWRSb3dLZXlzOwogICAgfSwKICAgIC8vIOinpuWPkeS6hua7muWKqAogICAgc2Nyb2xsQ2hhbmdlOiBmdW5jdGlvbiBzY3JvbGxDaGFuZ2UoaXNWZXIpIHsKICAgICAgY29uc29sZS5sb2coIlx1NkI2M1x1NTcyOCAiLmNvbmNhdChpc1ZlciA/ICfnq5blkJEnIDogJ+aoquWQkScsICIgXHU2RURBXHU1MkE4IikpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Case7.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA,OAAA,WAAA,MAAA,2BAAA,C,CACA;;AACA,IAAA,OAAA,GAAA,CACA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA,IAFA;AAGA,EAAA,GAAA,EAAA;AAHA,CADA,EAMA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA,MAFA;AAGA,EAAA,GAAA,EAAA;AAHA,CANA,EAWA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA,KAFA;AAGA,EAAA,GAAA,EAAA,KAHA;AAIA;AACA,EAAA,MAAA,EAAA,IALA,CAMA;AACA;AACA;;AARA,CAXA,CAAA,C,CAsBA;;AACA,IAAA,UAAA,GAAA,EAAA;;AACA,KAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA;AACA,EAAA,UAAA,CAAA,IAAA,CAAA;AAAA,IAAA,EAAA,EAAA,KAAA;AAAA,IAAA,IAAA,gBAAA,KAAA,CAAA;AAAA,IAAA,GAAA,EAAA,KAAA,GAAA;AAAA,GAAA;AACA;;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,OADA;AAEA,MAAA,UAAA,EAAA,UAFA;AAGA,MAAA,UAAA,EAAA;AACA,QAAA,OAAA,EAAA,CADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,UAAA,CAAA;AAHA,OAHA;AAQA;AACA,MAAA,eAAA,EAAA;AATA,KAAA;AAWA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,UAFA,EAEA,OAFA,EAEA,MAFA,EAEA;AACA;AACA,UAAA,MAAA,CAAA,SAAA,KAAA,KAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,KAAA,QAAA,EAAA;AACA,eAAA,UAAA,GAAA,KAAA,UAAA,CAAA,OAAA,EAAA;AACA;AACA;AACA,KATA;AAUA;AACA,IAAA,cAXA,0BAWA,eAXA,EAWA;AACA,WAAA,eAAA,GAAA,eAAA;AACA,KAbA;AAcA;AACA,IAAA,YAfA,wBAeA,KAfA,EAeA;AACA,MAAA,OAAA,CAAA,GAAA,wBAAA,KAAA,GAAA,IAAA,GAAA,IAAA;AACA;AAjBA;AAjBA,CAAA","sourcesContent":["<template>\n  <!-- 内容视图 -->\n  <div class=\"content-view\">\n    <!-- TablePlugin -->\n    <TablePlugin :fixedRowCount=\"2\" @scroll=\"scrollChange\">\n      <div>\n        <!-- 这里添加背景颜色，是因为指定悬浮行数之后，行的背景是透明的，不加背景颜色会出现穿透看到悬浮下面的行数据 -->\n        <div style=\"background-color: red; height: 50px; width: 100%;\"></div>\n        <a-table\n          style=\"background-color: #fff;\"\n          :columns=\"columns\"\n          :data-source=\"dataSource\"\n          :row-key=\"record => record.id\"\n          :pagination=\"pagination\"\n          :row-selection=\"{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }\"\n          :scroll=\"{ x: 1500 }\"\n          @change=\"onChange\"\n        ></a-table>\n      </div>\n    </TablePlugin>\n  </div>\n</template>\n\n<script>\n// 导入\nimport TablePlugin from '../components/TablePlugin'\n// 列数据\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id'\n  },\n  {\n    title: '姓名',\n    dataIndex: 'name',\n    key: 'name'\n  },\n  {\n    title: '年龄',\n    dataIndex: 'age',\n    key: 'age',\n    // 支持这种开启排序之后，外部公共进行修改数据源的方式，其实也就是排序走服务器最合适，或者本地手动排序一遍，调整数据源。\n    sorter: true\n    // 不支持这种内部的排序方式，因为无法使数据源发生变化，所有需要改变数据源的操作都需要公共处理，\n    // 这样数据源变化了，列表展示层才会刷新，否则生效的则会是悬浮的头部层，下面的列表会因为数据源没有变化而不刷新生效\n    // sorter: (a, b) => a.age > b.age\n  }\n]\n// 模拟数据\nconst dataSource = []\nfor (let index = 0; index < 100; index++) {\n  dataSource.push({ id: index, name: `User${index}`, age: index + 10 }) \n}\nexport default {\n  components: {\n    TablePlugin\n  },\n  data () {\n    return {\n      columns,\n      dataSource,\n      pagination: {\n        current: 1,\n        pageSize: 50,\n        total: dataSource.length\n      },\n      // 勾选框这种方式就是修改数据源，所以不需要做任何处理，排序操作跟这个原理一致\n      selectedRowKeys: []\n    }\n  },\n  methods: {\n    // Table回调\n    onChange (pagination, filters, sorter) {\n      // 简陋的本地排序处理\n      if (sorter.columnKey === 'age') {\n        if (sorter.order !== 'ascend') {\n          this.dataSource = this.dataSource.reverse()\n        }\n      }\n    },\n    // 勾选测试\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 触发了滚动\n    scrollChange (isVer) {\n      console.log(`正在 ${isVer ? '竖向' : '横向'} 滚动`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.content-view {\n  margin: 50px;\n}\n</style>"],"sourceRoot":"src/views"}]}