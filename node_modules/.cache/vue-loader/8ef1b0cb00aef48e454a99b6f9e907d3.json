{"remainingRequest":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case1.vue","mtime":1644892623341},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js","mtime":1644558789549},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js","mtime":1644558789767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOWvvOWFpQppbXBvcnQgVGFibGVQbHVnaW4gZnJvbSAnLi4vY29tcG9uZW50cy9UYWJsZVBsdWdpbicKLy8g5YiX5pWw5o2uCmNvbnN0IGNvbHVtbnMgPSBbCiAgewogICAgdGl0bGU6ICdpZCcsCiAgICBkYXRhSW5kZXg6ICdpZCcsCiAgICBrZXk6ICdpZCcsCiAgICBmaXhlZDogJ2xlZnQnCiAgfSwKICB7CiAgICB0aXRsZTogJ+Wnk+WQjScsCiAgICBkYXRhSW5kZXg6ICduYW1lJywKICAgIGtleTogJ25hbWUnCiAgfSwKICB7CiAgICB0aXRsZTogJ+W5tOm+hCcsCiAgICBkYXRhSW5kZXg6ICdhZ2UnLAogICAga2V5OiAnYWdlJywKICAgIC8vIOaUr+aMgei/meenjeW8gOWQr+aOkuW6j+S5i+WQju+8jOWklumDqOWFrOWFsei/m+ihjOS/ruaUueaVsOaNrua6kOeahOaWueW8j++8jOWFtuWunuS5n+WwseaYr+aOkuW6j+i1sOacjeWKoeWZqOacgOWQiOmAgu+8jOaIluiAheacrOWcsOaJi+WKqOaOkuW6j+S4gOmBje+8jOiwg+aVtOaVsOaNrua6kOOAggogICAgc29ydGVyOiB0cnVlCiAgICAvLyDkuI3mlK/mjIHov5nnp43lhoXpg6jnmoTmjpLluo/mlrnlvI/vvIzlm6DkuLrml6Dms5Xkvb/mlbDmja7mupDlj5HnlJ/lj5jljJbvvIzmiYDmnInpnIDopoHmlLnlj5jmlbDmja7mupDnmoTmk43kvZzpg73pnIDopoHlhazlhbHlpITnkIbvvIwKICAgIC8vIOi/meagt+aVsOaNrua6kOWPmOWMluS6hu+8jOWIl+ihqOWxleekuuWxguaJjeS8muWIt+aWsO+8jOWQpuWImeeUn+aViOeahOWImeS8muaYr+aCrOa1rueahOWktOmDqOWxgu+8jOS4i+mdoueahOWIl+ihqOS8muWboOS4uuaVsOaNrua6kOayoeacieWPmOWMluiAjOS4jeWIt+aWsOeUn+aViAogICAgLy8gc29ydGVyOiAoYSwgYikgPT4gYS5hZ2UgPiBiLmFnZQogIH0KXQovLyDmqKHmi5/mlbDmja4KY29uc3QgZGF0YVNvdXJjZSA9IFtdCmZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCAxMDA7IGluZGV4KyspIHsKICBkYXRhU291cmNlLnB1c2goeyBpZDogaW5kZXgsIG5hbWU6IGBVc2VyJHtpbmRleH1gLCBhZ2U6IGluZGV4ICsgMTAgfSkgCn0KZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFRhYmxlUGx1Z2luCiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbnMsCiAgICAgIGRhdGFTb3VyY2UsCiAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICBjdXJyZW50OiAxLAogICAgICAgIHBhZ2VTaXplOiA1MCwKICAgICAgICB0b3RhbDogZGF0YVNvdXJjZS5sZW5ndGgKICAgICAgfSwKICAgICAgLy8g5Yu+6YCJ5qGG6L+Z56eN5pa55byP5bCx5piv5L+u5pS55pWw5o2u5rqQ77yM5omA5Lul5LiN6ZyA6KaB5YGa5Lu75L2V5aSE55CG77yM5o6S5bqP5pON5L2c6Lef6L+Z5Liq5Y6f55CG5LiA6Ie0CiAgICAgIHNlbGVjdGVkUm93S2V5czogW10KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIFRhYmxl5Zue6LCDCiAgICBvbkNoYW5nZSAocGFnaW5hdGlvbiwgZmlsdGVycywgc29ydGVyKSB7CiAgICAgIC8vIOeugOmZi+eahOacrOWcsOaOkuW6j+WkhOeQhgogICAgICBpZiAoc29ydGVyLmNvbHVtbktleSA9PT0gJ2FnZScpIHsKICAgICAgICBpZiAoc29ydGVyLm9yZGVyICE9PSAnYXNjZW5kJykgewogICAgICAgICAgdGhpcy5kYXRhU291cmNlID0gdGhpcy5kYXRhU291cmNlLnJldmVyc2UoKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIC8vIOWLvumAiea1i+ivlQogICAgb25TZWxlY3RDaGFuZ2UgKHNlbGVjdGVkUm93S2V5cykgewogICAgICB0aGlzLnNlbGVjdGVkUm93S2V5cyA9IHNlbGVjdGVkUm93S2V5cwogICAgfSwKICAgIC8vIOinpuWPkeS6hua7muWKqAogICAgc2Nyb2xsQ2hhbmdlIChpc1ZlcikgewogICAgICBjb25zb2xlLmxvZyhg5q2j5ZyoICR7aXNWZXIgPyAn56uW5ZCRJyA6ICfmqKrlkJEnfSDmu5rliqhgKQogICAgfQogIH0KfQo="},{"version":3,"sources":["Case1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Case1.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <!-- 内容视图 -->\n  <div class=\"content-view\">\n    <!-- TablePlugin -->\n    <TablePlugin @scroll=\"scrollChange\">\n      <a-table\n        :columns=\"columns\"\n        :data-source=\"dataSource\"\n        :row-key=\"record => record.id\"\n        :pagination=\"pagination\"\n        :row-selection=\"{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }\"\n        :scroll=\"{ x: 1500 }\"\n        @change=\"onChange\"\n      ></a-table>\n    </TablePlugin>\n  </div>\n</template>\n\n<script>\n// 导入\nimport TablePlugin from '../components/TablePlugin'\n// 列数据\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n    fixed: 'left'\n  },\n  {\n    title: '姓名',\n    dataIndex: 'name',\n    key: 'name'\n  },\n  {\n    title: '年龄',\n    dataIndex: 'age',\n    key: 'age',\n    // 支持这种开启排序之后，外部公共进行修改数据源的方式，其实也就是排序走服务器最合适，或者本地手动排序一遍，调整数据源。\n    sorter: true\n    // 不支持这种内部的排序方式，因为无法使数据源发生变化，所有需要改变数据源的操作都需要公共处理，\n    // 这样数据源变化了，列表展示层才会刷新，否则生效的则会是悬浮的头部层，下面的列表会因为数据源没有变化而不刷新生效\n    // sorter: (a, b) => a.age > b.age\n  }\n]\n// 模拟数据\nconst dataSource = []\nfor (let index = 0; index < 100; index++) {\n  dataSource.push({ id: index, name: `User${index}`, age: index + 10 }) \n}\nexport default {\n  components: {\n    TablePlugin\n  },\n  data () {\n    return {\n      columns,\n      dataSource,\n      pagination: {\n        current: 1,\n        pageSize: 50,\n        total: dataSource.length\n      },\n      // 勾选框这种方式就是修改数据源，所以不需要做任何处理，排序操作跟这个原理一致\n      selectedRowKeys: []\n    }\n  },\n  methods: {\n    // Table回调\n    onChange (pagination, filters, sorter) {\n      // 简陋的本地排序处理\n      if (sorter.columnKey === 'age') {\n        if (sorter.order !== 'ascend') {\n          this.dataSource = this.dataSource.reverse()\n        }\n      }\n    },\n    // 勾选测试\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 触发了滚动\n    scrollChange (isVer) {\n      console.log(`正在 ${isVer ? '竖向' : '横向'} 滚动`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.content-view {\n  margin: 50px;\n}\n</style>"]}]}