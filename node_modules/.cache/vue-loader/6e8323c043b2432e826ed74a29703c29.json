{"remainingRequest":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case7.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Case7.vue","mtime":1645780568926},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/babel-loader/lib/index.js","mtime":1644558789549},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":1644558788599},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js","mtime":1644558789767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOWvvOWFpQppbXBvcnQgVGFibGVQbHVnaW4gZnJvbSAnLi4vY29tcG9uZW50cy9UYWJsZVBsdWdpbicKLy8g5YiX5pWw5o2uCmNvbnN0IGNvbHVtbnMgPSBbCiAgewogICAgdGl0bGU6ICdpZCcsCiAgICBkYXRhSW5kZXg6ICdpZCcsCiAgICBrZXk6ICdpZCcKICB9LAogIHsKICAgIHRpdGxlOiAn5aeT5ZCNJywKICAgIGRhdGFJbmRleDogJ25hbWUnLAogICAga2V5OiAnbmFtZScKICB9LAogIHsKICAgIHRpdGxlOiAn5bm06b6EJywKICAgIGRhdGFJbmRleDogJ2FnZScsCiAgICBrZXk6ICdhZ2UnLAogICAgLy8g5pSv5oyB6L+Z56eN5byA5ZCv5o6S5bqP5LmL5ZCO77yM5aSW6YOo5YWs5YWx6L+b6KGM5L+u5pS55pWw5o2u5rqQ55qE5pa55byP77yM5YW25a6e5Lmf5bCx5piv5o6S5bqP6LWw5pyN5Yqh5Zmo5pyA5ZCI6YCC77yM5oiW6ICF5pys5Zyw5omL5Yqo5o6S5bqP5LiA6YGN77yM6LCD5pW05pWw5o2u5rqQ44CCCiAgICBzb3J0ZXI6IHRydWUKICAgIC8vIOS4jeaUr+aMgei/meenjeWGhemDqOeahOaOkuW6j+aWueW8j++8jOWboOS4uuaXoOazleS9v+aVsOaNrua6kOWPkeeUn+WPmOWMlu+8jOaJgOaciemcgOimgeaUueWPmOaVsOaNrua6kOeahOaTjeS9nOmDvemcgOimgeWFrOWFseWkhOeQhu+8jAogICAgLy8g6L+Z5qC35pWw5o2u5rqQ5Y+Y5YyW5LqG77yM5YiX6KGo5bGV56S65bGC5omN5Lya5Yi35paw77yM5ZCm5YiZ55Sf5pWI55qE5YiZ5Lya5piv5oKs5rWu55qE5aS06YOo5bGC77yM5LiL6Z2i55qE5YiX6KGo5Lya5Zug5Li65pWw5o2u5rqQ5rKh5pyJ5Y+Y5YyW6ICM5LiN5Yi35paw55Sf5pWICiAgICAvLyBzb3J0ZXI6IChhLCBiKSA9PiBhLmFnZSA+IGIuYWdlCiAgfQpdCi8vIOaooeaLn+aVsOaNrgpjb25zdCBkYXRhU291cmNlID0gW10KZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IDEwMDsgaW5kZXgrKykgewogIGRhdGFTb3VyY2UucHVzaCh7IGlkOiBpbmRleCwgbmFtZTogYFVzZXIke2luZGV4fWAsIGFnZTogaW5kZXggKyAxMCB9KSAKfQpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVGFibGVQbHVnaW4KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY29sdW1ucywKICAgICAgZGF0YVNvdXJjZSwKICAgICAgcGFnaW5hdGlvbjogewogICAgICAgIGN1cnJlbnQ6IDEsCiAgICAgICAgcGFnZVNpemU6IDUwLAogICAgICAgIHRvdGFsOiBkYXRhU291cmNlLmxlbmd0aAogICAgICB9LAogICAgICAvLyDli77pgInmoYbov5nnp43mlrnlvI/lsLHmmK/kv67mlLnmlbDmja7mupDvvIzmiYDku6XkuI3pnIDopoHlgZrku7vkvZXlpITnkIbvvIzmjpLluo/mk43kvZzot5/ov5nkuKrljp/nkIbkuIDoh7QKICAgICAgc2VsZWN0ZWRSb3dLZXlzOiBbXQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8gVGFibGXlm57osIMKICAgIG9uQ2hhbmdlIChwYWdpbmF0aW9uLCBmaWx0ZXJzLCBzb3J0ZXIpIHsKICAgICAgLy8g566A6ZmL55qE5pys5Zyw5o6S5bqP5aSE55CGCiAgICAgIGlmIChzb3J0ZXIuY29sdW1uS2V5ID09PSAnYWdlJykgewogICAgICAgIGlmIChzb3J0ZXIub3JkZXIgIT09ICdhc2NlbmQnKSB7CiAgICAgICAgICB0aGlzLmRhdGFTb3VyY2UgPSB0aGlzLmRhdGFTb3VyY2UucmV2ZXJzZSgpCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgLy8g5Yu+6YCJ5rWL6K+VCiAgICBvblNlbGVjdENoYW5nZSAoc2VsZWN0ZWRSb3dLZXlzKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRSb3dLZXlzID0gc2VsZWN0ZWRSb3dLZXlzCiAgICB9LAogICAgLy8g6Kem5Y+R5LqG5rua5YqoCiAgICBzY3JvbGxDaGFuZ2UgKGlzVmVyKSB7CiAgICAgIGNvbnNvbGUubG9nKGDmraPlnKggJHtpc1ZlciA/ICfnq5blkJEnIDogJ+aoquWQkSd9IOa7muWKqGApCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Case7.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Case7.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <!-- 内容视图 -->\n  <div class=\"content-view\">\n    <!-- TablePlugin -->\n    <TablePlugin :fixedRowCount=\"2\" @scroll=\"scrollChange\">\n      <div>\n        <!-- 这里添加背景颜色，是因为指定悬浮行数之后，行的背景是透明的，不加背景颜色会出现穿透看到悬浮下面的行数据 -->\n        <div style=\"background-color: red; height: 50px; width: 100%;\"></div>\n        <a-table\n          style=\"background-color: #fff;\"\n          :columns=\"columns\"\n          :data-source=\"dataSource\"\n          :row-key=\"record => record.id\"\n          :pagination=\"pagination\"\n          :row-selection=\"{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }\"\n          :scroll=\"{ x: 1500 }\"\n          @change=\"onChange\"\n        ></a-table>\n      </div>\n    </TablePlugin>\n  </div>\n</template>\n\n<script>\n// 导入\nimport TablePlugin from '../components/TablePlugin'\n// 列数据\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id'\n  },\n  {\n    title: '姓名',\n    dataIndex: 'name',\n    key: 'name'\n  },\n  {\n    title: '年龄',\n    dataIndex: 'age',\n    key: 'age',\n    // 支持这种开启排序之后，外部公共进行修改数据源的方式，其实也就是排序走服务器最合适，或者本地手动排序一遍，调整数据源。\n    sorter: true\n    // 不支持这种内部的排序方式，因为无法使数据源发生变化，所有需要改变数据源的操作都需要公共处理，\n    // 这样数据源变化了，列表展示层才会刷新，否则生效的则会是悬浮的头部层，下面的列表会因为数据源没有变化而不刷新生效\n    // sorter: (a, b) => a.age > b.age\n  }\n]\n// 模拟数据\nconst dataSource = []\nfor (let index = 0; index < 100; index++) {\n  dataSource.push({ id: index, name: `User${index}`, age: index + 10 }) \n}\nexport default {\n  components: {\n    TablePlugin\n  },\n  data () {\n    return {\n      columns,\n      dataSource,\n      pagination: {\n        current: 1,\n        pageSize: 50,\n        total: dataSource.length\n      },\n      // 勾选框这种方式就是修改数据源，所以不需要做任何处理，排序操作跟这个原理一致\n      selectedRowKeys: []\n    }\n  },\n  methods: {\n    // Table回调\n    onChange (pagination, filters, sorter) {\n      // 简陋的本地排序处理\n      if (sorter.columnKey === 'age') {\n        if (sorter.order !== 'ascend') {\n          this.dataSource = this.dataSource.reverse()\n        }\n      }\n    },\n    // 勾选测试\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    // 触发了滚动\n    scrollChange (isVer) {\n      console.log(`正在 ${isVer ? '竖向' : '横向'} 滚动`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.content-view {\n  margin: 50px;\n}\n</style>"]}]}