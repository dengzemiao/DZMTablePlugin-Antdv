{"remainingRequest":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/src/views/Home.vue","mtime":1644463630897},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dengzemiao/Desktop/GitHub/DZMTablePlugin-Antdv/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGVudC12aWV3IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Ci5jYXNlLWxpc3QgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKfQouY2FzZS1saXN0IC5hbnQtYnRuIHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHdpZHRoOiAxMDAlOwogIG1hcmdpbi10b3A6IDIwcHg7Cn0KLmhpbnQtdmlldyB7CiAgbWFyZ2luLXRvcDogMjBweDsKICBsaW5lLWhlaWdodDogMjhweDsKfQouaGludC10aXRsZSB7CiAgZm9udC13ZWlnaHQ6IDUwMDsKfQouaGludC1zcGFjZSB7CiAgbWFyZ2luLXRvcDogNHB4Owp9Ci5oaW50LWNvbnRlbnQgewogIG1hcmdpbi1sZWZ0OiAyMHB4Owp9Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"content-view\">\n    <div class=\"case-list\">\n      <a-button @click=\"jumlCase('case1')\">案例一：Table 左右有固定悬浮列效果（包含排序，勾选）</a-button>\n      <a-button @click=\"jumlCase('case2')\">案例二：Table 无固定悬浮列效果（带动画）</a-button>\n      <a-button @click=\"jumlCase('case3')\">案例三：Table 在多层级视图中效果</a-button>\n      <a-button @click=\"jumlCase('case4')\">案例四：Table 同一个页面存在多个效果</a-button>\n      <a-button @click=\"jumlCase('case5')\">案例五：Table 自定义滚动监听</a-button>\n      <a-button @click=\"jumlCase('case5')\">案例六：Table Plugin 包裹被多层 div 包裹的 Table</a-button>\n      <a-button @click=\"touchCase11\">案例七：Table 在侧滑弹窗中效果</a-button>\n      <!-- 小提示 -->\n      <div class=\"hint-view\">\n        <span class=\"hint-title\">测试结果建议（一般情况下不需要用到，遇到时可以进行参考）：</span>\n        <br>\n        <div class=\"hint-space\"></div>\n        1、重点注意：如果是网络数据，加载数据完成后，刷新插件布局（二选一）：\n        <div class=\"hint-content\">\n          方式一：将当前数据源数量传递到插件内部 <a>:dataCount=\"dataSource.length\"</a>\n          <br>\n          方式二：<a>this.$nextTick(() => {  this.$refs['TablePlugin'].reload() })</a>\n          <br>\n          保证悬浮位置的准确性，有数据就出来悬浮层，没有数据则会隐藏悬浮层。\n        </div>\n        <div class=\"hint-space\"></div>\n        2、有左右滚动范围，列宽度可以进行滚动的时候，悬浮层会比较流畅，\n        <div class=\"hint-content\">\n          无左右滚动范围时，上线滚动悬浮层在有的情况会出现闪动的情况。\n          <br>\n          在无需左右滚动范围时，可以通过给 Table 设置 <a>:scroll=\"{ x: true }\"</a> 强行带滚动，并隐藏滚动条\n          <br>\n          这种出来方式是为了在一个不需要左右滚动的 Table 身上带上滚动元素，\n          <br>\n          由于宽度不够，它不会进行滚动，这样悬浮层也达到了流畅的目的\n        </div>\n        <div class=\"hint-space\"></div>\n        3、无左右滚动范围，自定义滚动条不会出现。\n        <br>\n        <div class=\"hint-space\"></div>\n        4、支持头部、尾部（进度条）悬浮动画设置。\n        <br>\n        <div class=\"hint-space\"></div>\n        5、如果悬浮的自定义滚动条无法拖拽，是因为滚动条高度低了，\n        <div class=\"hint-content\">\n          增高 TablePlugin 底部的 <a>.plugin-scroll-bar</a> 高度即可。\n        </div>\n        <div class=\"hint-space\"></div>\n        6、排序、勾选等操作，都需要公共处理数据源，\n        <div class=\"hint-content\">\n          只有数据源发生变化才会正确刷新列表，\n          <br>\n          其实也就是排序走服务器或本地公共的对数据源进行排序，\n          <br>\n          数据源必须进行变化，可以参考 <a @click=\"jumlCase('case1')\">案例一</a>。\n        </div>\n        <div class=\"hint-space\"></div>\n        7、如果滚动条样式需要调整，可以参考 <a href=\"https://blog.csdn.net/zz00008888/article/details/114702186\" target=\"_blank\">修改滚动条样式</a>。\n      </div>\n    </div>\n    <!-- 案例五 -->\n    <Case11 ref=\"case11\"></Case11>\n  </div>\n</template>\n\n<script>\nimport Case11 from './Case11.vue'\nexport default {\n  components: {\n    Case11\n  },\n  methods: {\n    // 跳转案例\n    jumlCase(path) {\n      this.$router.push(path)\n    },\n    // 打开案例侧滑栏\n    touchCase11 () {\n      this.$refs['case11'].showDrawer()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.content-view {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.case-list {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n}\n.case-list .ant-btn {\n  text-align: left;\n  width: 100%;\n  margin-top: 20px;\n}\n.hint-view {\n  margin-top: 20px;\n  line-height: 28px;\n}\n.hint-title {\n  font-weight: 500;\n}\n.hint-space {\n  margin-top: 4px;\n}\n.hint-content {\n  margin-left: 20px;\n}\n</style>"]}]}